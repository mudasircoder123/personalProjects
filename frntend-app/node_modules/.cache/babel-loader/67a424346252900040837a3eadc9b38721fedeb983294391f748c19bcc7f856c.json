{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mudsi\\\\Downloads\\\\server\\\\frntend-app\\\\src\\\\ProductById.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProductById = () => {\n  _s();\n  const {\n    id\n  } = useParams(); // Get the product ID from the URL\n  const [product, setProduct] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProduct = async () => {\n      try {\n        const response = await fetch(`http://localhost:4500/api/products/${id}`);\n        if (!response.ok) {\n          throw new Error('Product not found');\n        }\n        const data = await response.json();\n        setProduct(data);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProduct();\n  }, [id]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  if (!product) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No product found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 24\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n};\n_s(ProductById, \"f7EN1YxU1YYnw9hNF8hKHfhzw/8=\", false, function () {\n  return [useParams];\n});\n_c = ProductById;\nexport default ProductById;\nvar _c;\n$RefreshReg$(_c, \"ProductById\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Navbar","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductById","_s","id","product","setProduct","loading","setLoading","error","setError","fetchProduct","response","fetch","ok","Error","data","json","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mudsi/Downloads/server/frntend-app/src/ProductById.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport Navbar from './Navbar';\r\nimport Footer from './Footer';\r\nconst ProductById = () => {\r\n  const { id } = useParams(); // Get the product ID from the URL\r\n  const [product, setProduct] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:4500/api/products/${id}`);\r\n        if (!response.ok) {\r\n          throw new Error('Product not found');\r\n        }\r\n        const data = await response.json();\r\n        setProduct(data);\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProduct();\r\n  }, [id]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>{error}</p>;\r\n  if (!product) return <p>No product found</p>;\r\n\r\n  return (\r\n  <>\r\n  <Navbar/>\r\n \r\n<Footer/>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductById;\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC9B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGT,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,sCAAqCT,EAAG,EAAC,CAAC;QACxE,IAAI,CAACQ,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,mBAAmB,CAAC;QACtC;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCX,UAAU,CAACU,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZR,QAAQ,CAACQ,GAAG,CAACC,OAAO,CAAC;MACvB,CAAC,SAAS;QACRX,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE,oBAAOR,OAAA;IAAAqB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIf,KAAK,EAAE,oBAAOV,OAAA;IAAAqB,QAAA,EAAIX;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAChC,IAAI,CAACnB,OAAO,EAAE,oBAAON,OAAA;IAAAqB,QAAA,EAAG;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE5C,oBACAzB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACArB,OAAA,CAACH,MAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEXzB,OAAA,CAACF,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACH,CAAC;AAEP,CAAC;AAACrB,EAAA,CApCID,WAAW;EAAA,QACAP,SAAS;AAAA;AAAA8B,EAAA,GADpBvB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}