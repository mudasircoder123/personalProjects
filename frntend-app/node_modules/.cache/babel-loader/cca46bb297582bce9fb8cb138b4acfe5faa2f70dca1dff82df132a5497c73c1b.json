{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mudsi\\\\Downloads\\\\server\\\\frntend-app\\\\src\\\\Payment.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\n\n// Load the Stripe object with your Stripe public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('your-publishable-key-from-stripe');\nconst Payment = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsLoading(true);\n\n    // Call the backend to create a PaymentIntent\n    const response = await fetch('http://localhost:4500/create-payment-intent', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        amount: 5000,\n        currency: 'usd'\n      }) // Example: $50.00\n    });\n    const {\n      clientSecret\n    } = await response.json();\n    const cardElement = elements.getElement(CardElement);\n\n    // Confirm the payment using the clientSecret\n    const result = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardElement,\n        billing_details: {\n          name: 'Customer Name' // Replace with customer info\n        }\n      }\n    });\n    setIsLoading(false);\n    if (result.error) {\n      // Show error to your customer\n      setError(result.error.message);\n    } else {\n      // The payment has been processed!\n      if (result.paymentIntent.status === 'succeeded') {\n        setSuccess(true);\n        setError(null);\n        console.log('Payment succeeded!');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Elements, {\n      stripe: stripePromise,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(CardElement, {\n          options: {\n            style: {\n              base: {\n                fontSize: '16px',\n                color: '#424770',\n                '::placeholder': {\n                  color: '#aab7c4'\n                }\n              },\n              invalid: {\n                color: '#9e2146'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !stripe || isLoading,\n          children: isLoading ? 'Processing...' : 'Pay $50'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'green'\n        },\n        children: \"Payment successful!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Payment, \"xEULPSZ7kqNdJETfV4OcPuiUjzM=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = Payment;\nexport default Payment;\nvar _c;\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["React","useState","loadStripe","Elements","CardElement","useStripe","useElements","jsxDEV","_jsxDEV","stripePromise","Payment","_s","stripe","elements","isLoading","setIsLoading","error","setError","success","setSuccess","handleSubmit","event","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","currency","clientSecret","json","cardElement","getElement","result","confirmCardPayment","payment_method","card","billing_details","name","message","paymentIntent","status","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","options","style","base","fontSize","color","invalid","type","disabled","_c","$RefreshReg$"],"sources":["C:/Users/mudsi/Downloads/server/frntend-app/src/Payment.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\n\r\n// Load the Stripe object with your Stripe public key\r\nconst stripePromise = loadStripe('your-publishable-key-from-stripe');\r\n\r\nconst Payment= () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    // Call the backend to create a PaymentIntent\r\n    const response = await fetch('http://localhost:4500/create-payment-intent', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ amount: 5000, currency: 'usd' }), // Example: $50.00\r\n    });\r\n\r\n    const { clientSecret } = await response.json();\r\n\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // Confirm the payment using the clientSecret\r\n    const result = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: cardElement,\r\n        billing_details: {\r\n          name: 'Customer Name', // Replace with customer info\r\n        },\r\n      },\r\n    });\r\n\r\n    setIsLoading(false);\r\n\r\n    if (result.error) {\r\n      // Show error to your customer\r\n      setError(result.error.message);\r\n    } else {\r\n      // The payment has been processed!\r\n      if (result.paymentIntent.status === 'succeeded') {\r\n        setSuccess(true);\r\n        setError(null);\r\n        console.log('Payment succeeded!');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Checkout</h1>\r\n      <Elements stripe={stripePromise}>\r\n        <form onSubmit={handleSubmit}>\r\n          <CardElement \r\n            options={{\r\n              style: {\r\n                base: {\r\n                  fontSize: '16px',\r\n                  color: '#424770',\r\n                  '::placeholder': {\r\n                    color: '#aab7c4',\r\n                  },\r\n                },\r\n                invalid: {\r\n                  color: '#9e2146',\r\n                },\r\n              },\r\n            }}\r\n          />\r\n          <button type=\"submit\" disabled={!stripe || isLoading}>\r\n            {isLoading ? 'Processing...' : 'Pay $50'}\r\n          </button>\r\n        </form>\r\n\r\n        {error && <div style={{ color: 'red' }}>{error}</div>}\r\n        {success && <div style={{ color: 'green' }}>Payment successful!</div>}\r\n      </Elements>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Payment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}